version: "3.9"

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - django_static_volume:/usr/src/app/static
      - mlmodels_volume:/usr/src/app/recommender/mlmodels
    expose:
      - 8000
    env_file:
      - ./backend/.env
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8000
    depends_on:
      - db
    container_name: django

  db:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    volumes:
      - ./postgres/data:/var/lib/postgresql/data/
    env_file:
      - ./postgres/.env
    ports:
      - 5432:5432
    container_name: database

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - API_SERVER=${ENV_API_SERVER}
    volumes:
      - ./frontend/app:/home/jovyan/work
      - react_static_volume:/usr/src/app/build/static
    expose:
      - 3000
    env_file:
      - .env
    command: serve -s build -l 3000
    depends_on:
      - django
    container_name: react

  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - django_static_volume:/usr/src/app/django_files/static
      - react_static_volume:/usr/src/app/react_files/static
    ports:
      - 80:80
    depends_on:
      - react
    container_name: nginx

  notebook:
    build:
      context: ./notebook
      dockerfile: Dockerfile
    volumes:
        - ./notebook:/home/jovyan/work
        - mlmodels_volume:/home/jovyan/work/mlmodels
    ports:
        - "8040:8040"
        - "8888:8888"
    depends_on:
        - db
    container_name: notebook

volumes:
  django_static_volume:
  react_static_volume:
  mlmodels_volume:
